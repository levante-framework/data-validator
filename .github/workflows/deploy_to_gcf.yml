# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Deploy to Google Cloud Functions

on:
  push:
    branches:
      - dev
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2.1.2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_DEV }}
          project_id: hs-levante-admin-dev
        if: github.ref == 'refs/heads/dev'

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2.1.2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}
          project_id: hs-levante-admin-prod
        if: github.ref == 'refs/heads/main'

      - name: Set GCloud Project
        run: |
          if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            echo "Using Development Project"
            gcloud config set project hs-levante-admin-dev
            FUNCTION_NAME="data-validator"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "Using Production Project"
            gcloud config set project hs-levante-admin-prod
            FUNCTION_NAME="data-validator"
          fi

      - name: Deploy to Google Cloud Functions
        run: |
          gcloud functions deploy $FUNCTION_NAME \
            --gen2 \
            --region us-central1 \
            --runtime python312 \
            --trigger-http \
            --memory=4GiB \
            --timeout 3600s \
            --allow-unauthenticated \
            --entry-point data_validator

    
    # - name: Set up Python 3.10
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: "3.10"
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install flake8 pytest
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
